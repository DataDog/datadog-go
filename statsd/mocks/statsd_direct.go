// Code generated by MockGen. DO NOT EDIT.
// Source: statsd_direct.go

// Package mock_statsd is a generated GoMock package.
package mock_statsd

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockClientDirectInterface is a mock of ClientDirectInterface interface.
type MockClientDirectInterface struct {
	ctrl     *gomock.Controller
	recorder *MockClientDirectInterfaceMockRecorder
}

// MockClientDirectInterfaceMockRecorder is the mock recorder for MockClientDirectInterface.
type MockClientDirectInterfaceMockRecorder struct {
	mock *MockClientDirectInterface
}

// NewMockClientDirectInterface creates a new mock instance.
func NewMockClientDirectInterface(ctrl *gomock.Controller) *MockClientDirectInterface {
	mock := &MockClientDirectInterface{ctrl: ctrl}
	mock.recorder = &MockClientDirectInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClientDirectInterface) EXPECT() *MockClientDirectInterfaceMockRecorder {
	return m.recorder
}

// DistributionSamples mocks base method.
func (m *MockClientDirectInterface) DistributionSamples(name string, values []float64, tags []string, rate float64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DistributionSamples", name, values, tags, rate)
	ret0, _ := ret[0].(error)
	return ret0
}

// DistributionSamples indicates an expected call of DistributionSamples.
func (mr *MockClientDirectInterfaceMockRecorder) DistributionSamples(name, values, tags, rate interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DistributionSamples", reflect.TypeOf((*MockClientDirectInterface)(nil).DistributionSamples), name, values, tags, rate)
}
